%> @brief Evaluating the RHS term for the 3d problem
%> @details The function calculate the RHS term on each mesh
function matEvaluateRHS3d( obj, fphys )
for m = 1:obj.Nmesh % calculate RHS term on each mesh
    fieldValue = fphys{m};
    mesh = obj.meshUnion(m);
    [ E, G, H ] = obj.matEvaluateFlux( mesh, fieldValue );
    [ dFlux ] = obj.matEvaluateNumericalFlux( mesh, fieldValue );
    [ obj.frhs{m} ] = ...
        - mesh.rx.*( mesh.cell.Dr * E ) ...
        - mesh.sx.*( mesh.cell.Ds * E ) ...
        - mesh.tx.*( mesh.cell.Dt * E ) ...
        - mesh.ry.*( mesh.cell.Dr * G ) ...
        - mesh.sy.*( mesh.cell.Ds * G ) ...
        - mesh.ty.*( mesh.cell.Dt * G ) ...
        - mesh.rz.*( mesh.cell.Dr * H ) ...
        - mesh.sz.*( mesh.cell.Ds * H ) ...
        - mesh.tz.*( mesh.cell.Dt * H ) ...
        + ( mesh.cell.LIFT * ( mesh.Js .* dFlux ))./ mesh.J;
    obj.matEvaluateSourceTerm( mesh, fphys{m} );
end
end